import java.util.Properties;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpATTRS;
import com.jcraft.jsch.SftpException;

import abcdata.gonggao.GongGaoAbc;

public class SFtpUtils {

	/**
	 * 
	 * @param path 上传文件的路径
	 * @param dataDate
	 * @param uploadPath 上传目录的路径
	 * @throws JSchException
	 * @throws SftpException
	 */
	static Logger logger=LoggerFactory.getLogger(SFtpUtils.class);

	public static void upload(String path,String dataDate,String uploadPath) throws JSchException, SftpException{
        JSch jsch = new JSch();
        Session session = jsch.getSession("root","localhost" , 22);          
        session.setPassword("123456");
        Properties config = new Properties();
        config.put("StrictHostKeyChecking", "no");
        session.setConfig(config);
        session.connect();
        logger.info("【是否成功连接SFTP】："+session.isConnected());
        Channel channel = session.openChannel("sftp");
        channel.connect();
        ChannelSftp sftp = (ChannelSftp) channel;        
        if(!isDirExist("/upload/"+uploadPath+"/"+dataDate+"", sftp)){
        	logger.info("文件目录不存在创建目录！"+dataDate);
            sftp.mkdir("/upload/"+uploadPath+"/"+dataDate+"");
        }
        sftp.put(path, "/upload/"+uploadPath+"/"+dataDate+"");
        sftp.exit();
        sftp.disconnect();
        session.disconnect();
	}
	
	/** 
	  * 判断目录是否存在 
	  */  
	 public static boolean isDirExist(String directory,ChannelSftp sftp) {  
	  boolean isDirExistFlag = false;  
	  try {  
		   SftpATTRS sftpATTRS = sftp.lstat(directory);  
		   isDirExistFlag = true;  
		   return sftpATTRS.isDir();  
	  } catch (Exception e) {  
		 if (e.getMessage().toLowerCase().equals("no such file")) {  
		    isDirExistFlag = false;  
		 }  
	  }  	  
	  return isDirExistFlag;  
	 }
}
